apply plugin: 'com.android.library'
apply from: '../maven-push-java-lib.gradle'
apply plugin: 'findbugs'

sourceCompatibility = rootProject.ext.javaSourceCompatibility
targetCompatibility = rootProject.ext.javaTargetCompatibility

def logger = new com.android.build.gradle.internal.LoggerWrapper(project.logger)
def sdkHandler = new com.android.build.gradle.internal.SdkHandler(project, logger)
for (File file : sdkHandler.sdkLoader.repositories) {
  project.repositories.maven {
    url = file.toURI()
  }
}

android {

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdk
        targetSdkVersion rootProject.ext.targetSdk
        versionName project.VERSION_NAME
        versionCode Integer.parseInt(project.VERSION_CODE)

        packagingOptions {
            exclude 'LICENSE.txt'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility rootProject.ext.javaSourceCompatibility
        targetCompatibility rootProject.ext.javaTargetCompatibility
    }

    /*
    testOptions {
      unitTests.returnDefaultValues = true
    }
    */
}

dependencies {

  compile 'com.android.support:support-annotations:' + rootProject.ext.supportLibVersion

  testCompile 'junit:junit:' + rootProject.ext.junitVersion
  testCompile 'org.mockito:mockito-core:' + rootProject.ext.mockitoVersion
}



tasks.withType(FindBugs) {
  reports {
    xml.enabled = false
    html.enabled = true
  }
}
